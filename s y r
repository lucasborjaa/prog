//@version=4
study("Patrón de velas y picos y valles", overlay=true)

// Encontrar picos y valles
valle = pivotlow(low, 1, 1)
pico = pivothigh(high, 1, 1)

// Detectar ambos patrones
patron = (close[4] > open[4] and close[3] < open[3] and close[2] < open[2] and close[1] > open[1] and close > open) or (close[4] < open[4] and close[3] > open[3] and close[2] > open[2] and close[1] < open[1] and close < open)

// Contar las velas verdes y rojas en la sexta vela
var int velasVerdesPico = 0
var int velasRojasPico = 0
var int velasVerdesValle = 0
var int velasRojasValle = 0

if patron[1] // Mover la comprobación de patrones a la sexta vela
    if not na(pico[1]) // Cambiar la verificación de pico y valle a la sexta vela
        if close > open
            velasVerdesPico := velasVerdesPico + 1
        else if close < open
            velasRojasPico := velasRojasPico + 1
    if not na(valle[1]) // Cambiar la verificación de pico y valle a la sexta vela
        if close > open
            velasVerdesValle := velasVerdesValle + 1
        else if close < open
            velasRojasValle := velasRojasValle + 1

// Mostrar un símbolo en la sexta vela y el conteo de velas verdes y rojas si la quinta vela está cerca de un pico o un valle
if patron[1] and not na(pico[1])
    label.new(bar_index, high, text="Pico detectado\nVelas verdes: " + tostring(velasVerdesPico) + "\nVelas rojas: " + tostring(velasRojasPico), style=label.style_label_up, color=color.green)
if patron[1] and not na(valle[1])
    label.new(bar_index, high, text="Valle detectado\nVelas verdes: " + tostring(velasVerdesValle) + "\nVelas rojas: " + tostring(velasRojasValle), style=label.style_label_down, color=color.red)

// Trazar líneas en los picos y valles
if not na(valle)
    line.new(x1=bar_index[1], y1=valle, x2=bar_index, y2=valle, width=2, color=color.green)
if not na(pico)
    line.new(x1=bar_index[1], y1=pico, x2=bar_index, y2=pico, width=2, color=color.red)
